import streamlit as st
import pandas as pd
import datetime

st.set_page_config(page_title="–û–ø—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä", layout="centered")
st.title("üìä –û–ø—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä (Analyze + IV/HV)")

st.markdown("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø—Ü–∏–æ–Ω–∞ **–≤—Ä—É—á–Ω—É—é** –∏–ª–∏ **–∑–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª** —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏:\n"
            "`Ticker, Expiry, Type, Premium, Strike, IV, HV` (Type = Call/Put)")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç—å CSV-—Ñ–∞–π–ª", type="csv")

if not uploaded_file:
    st.subheader("–í–≤–æ–¥ –≤—Ä—É—á–Ω—É—é...")

    ticker = st.text_input("–¢–∏–∫–µ—Ä", value="AAPL")
    expiry = st.date_input("–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –æ–ø—Ü–∏–æ–Ω–∞", min_value=datetime.date.today())
    option_type = st.selectbox("–¢–∏–ø –æ–ø—Ü–∏–æ–Ω–∞", ["Call", "Put"])
    premium_type = st.selectbox("–¢–∏–ø –ø—Ä–µ–º–∏–∏", ["Bid", "Ask", "Mark"], index=2)
    premium = st.number_input(f"–ó–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–µ–º–∏–∏ ({premium_type})", min_value=0.0, step=0.1)
    strike = st.number_input("Strike", min_value=0.01, step=0.5)
    iv = st.number_input("Implied Volatility (IV, %)", min_value=0.0, step=0.1)
    hv = st.number_input("Historical Volatility (HV, %)", min_value=0.0, step=0.1)

    df = pd.DataFrame([{
        "Ticker": ticker.upper(),
        "Expiry": expiry,
        "Type": option_type,
        "Premium": premium,
        "Strike": strike,
        "IV": iv,
        "HV": hv
    }])
else:
    try:
        df = pd.read_csv(uploaded_file)
        expected_cols = {"Ticker", "Expiry", "Type", "Premium", "Strike", "IV", "HV"}
        if not expected_cols.issubset(set(df.columns)):
            st.error(f"CSV –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫–∏: {', '.join(expected_cols)}")
            st.stop()
        df["Expiry"] = pd.to_datetime(df["Expiry"]).dt.date
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        st.stop()

# –†–∞—Å—á—ë—Ç—ã
df["Grade"] = (df["Premium"] * 100) / df["Strike"]
mean_iv = df["IV"].mean()
df["–°—Ä–µ–¥–Ω—è—è IV"] = mean_iv

def analyze(row):
    if row["Type"] == "Put":
        if row["IV"] < row["HV"] and row["IV"] < row["–°—Ä–µ–¥–Ω—è—è IV"]:
            return "üìâ –ò–¥–µ–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç: Buy Put"
        elif row["Grade"] > 10 and row["IV"] > row["HV"]:
            return "‚úÖ Sell Put (Analyze > 10 –∏ –≤—ã—Å–æ–∫–∞—è IV)"
        elif row["IV"] < row["HV"]:
            return "üü¢ Buy Put (IV < HV)"
        elif row["Grade"] < 10:
            return "‚ùå –ù–µ –ø—Ä–æ–¥–∞–≤–∞—Ç—å Put (Analyze < 10)"
        else:
            return "‚ÑπÔ∏è –ù–µ—Ç —á—ë—Ç–∫–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (Put)"
    else:  # Call
        if row["IV"] < row["HV"] and row["IV"] < row["–°—Ä–µ–¥–Ω—è—è IV"]:
            return "üìà –ò–¥–µ–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç: Buy Call"
        elif row["Grade"] > 10 and row["IV"] > row["HV"]:
            return "‚úÖ Sell Call (Analyze > 10 –∏ –≤—ã—Å–æ–∫–∞—è IV)"
        elif row["IV"] < row["HV"]:
            return "üü¢ Buy Call (IV < HV)"
        elif row["Grade"] < 10:
            return "‚ùå –ù–µ –ø—Ä–æ–¥–∞–≤–∞—Ç—å Call (Analyze < 10)"
        else:
            return "‚ÑπÔ∏è –ù–µ—Ç —á—ë—Ç–∫–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (Call)"

df["–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è"] = df.apply(analyze, axis=1)

# –ü–æ–¥—Å–≤–µ—Ç–∫–∞
def highlight(row):
    if "–ò–¥–µ–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç" in row["–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è"]:
        return ["background-color: #d4edda"] * len(row)  # –∑–µ–ª—ë–Ω—ã–π
    elif "Sell" in row["–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è"]:
        return ["background-color: #fff3cd"] * len(row)  # –∂—ë–ª—Ç—ã–π
    elif "–ù–µ –ø—Ä–æ–¥–∞–≤–∞—Ç—å" in row["–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è"]:
        return ["background-color: #f8d7da"] * len(row)  # –∫—Ä–∞—Å–Ω—ã–π
    return [""] * len(row)

st.subheader("üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:")
st.dataframe(df.style.format({
    "Premium": "{:.2f}",
    "Strike": "{:.2f}",
    "IV": "{:.2f}",
    "HV": "{:.2f}",
    "Grade": "{:.2f}",
    "–°—Ä–µ–¥–Ω—è—è IV": "{:.2f}"
}).apply(highlight, axis=1), use_container_width=True)

csv = df.to_csv(index=False).encode("utf-8")
st.download_button("üì• –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ CSV", data=csv, file_name="option_analysis.csv", mime="text/csv")

with st.expander("‚ÑπÔ∏è –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–Ω–∞–ª–∏–∑?"):
    st.markdown("""
    - **Grade = Premium / Strike √ó 100**
    - **IV < HV** = –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –Ω–µ–¥–æ–æ—Ü–µ–Ω–µ–Ω–∞, –≤—ã–≥–æ–¥–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å
    - **IV > HV –∏ Grade > 10** = –≤—ã—Å–æ–∫–∞—è –ø—Ä–µ–º–∏—è –∏ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å ‚Äî –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å
    - –ê–Ω–∞–ª–∏–∑ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è Call –∏ Put
    """)
